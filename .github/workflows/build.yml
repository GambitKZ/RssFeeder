name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

env:
  azure-function-project-path: './src/Web.AzureFunction'    # Path to Azure Function project
  

jobs:
  build:
    name: Build and Tests
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17 # Java necessary for run of Sonar
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: CheckOut the Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Sonar Cloud part
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      #.Net part
      - name: Cache for NuGet
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore --locked-mode # Prevent package version update

      - name: Install .Net Coverage # We need it for the file with test result
        run: dotnet tool install --global dotnet-coverage

      - name: Build, Test, and Analyze with Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"GambitKZ_RssFeeder" /o:"gambitkz" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --configuration Release --no-restore
          dotnet-coverage collect 'dotnet test --filter TestCategory!~Skip --no-restore' -f xml  -o 'coverage.xml'          
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build Web part
        shell: pwsh
        run: |
          pushd './${{ env.azure-function-project-path }}'
          dotnet build --configuration Release --no-restore --output /azureweb-output
          popd

      - name: Archive Azure Web artifacts
        uses: actions/upload-artifact@v3
        with:
          name: azurepackage-${{ github.run_number }}
          path: /azureweb-output
          retention-days: 1

  call-deploy-workflow:
    name: Deploy to Azure
    needs: build # Make sure that Build was a success
    if: ${{github.event_name == 'push' && github.ref_name == 'master'}}
    uses: ./.github/workflows/deploy-azure-function.yml
    with:
      artifact-name: azurepackage-${{ github.run_number }} # env can be used only in STEP
    secrets: inherit